import{i as g}from"./CroP3Izp.js";import{o as m}from"./B11Zin6s.js";import{J as p}from"./D2BM3cv1.js";let d=null;async function i(){return d||(d=await m("planprogressitems",1,{upgrade(e){const t=e.createObjectStore("planprogressitems",{keyPath:"key",autoIncrement:!0});t.createIndex("planIndex","id"),t.createIndex("dayIndex",["id","day"]),t.createIndex("singleItemIndex",["id","day","itemIndex"])}})),d}async function w(e){const t=await i(),r=new Date()[Symbol.toPrimitive]("number"),n={...e,date:r},s=t.transaction("planprogressitems","readwrite");(await s.store.index("singleItemIndex").getAll([e.id,e.day,e.itemIndex])).length===0&&(await s.store.add(n),await s.done,x())}async function u(e){return await(await i()).transaction("planprogressitems").store.index("planIndex").getAll(e)}async function R(e){if(e){const r=(await i()).transaction("planprogressitems","readwrite"),s=await r.store.index("planIndex").getAllKeys(e);for(const a of s)await r.store.delete(a);await r.done,console.log(`Plan: Deleted ${s.length} records with plan ID "${e}"`)}}async function c(e,t){return(await(await i()).transaction("planprogressitems").store.index("dayIndex").getAll([e,t])).map(l=>l.itemIndex)}async function b(e,t){let r=-1;for(let n=0;n<e.items.length;n++)if((await c(e.id,e.items[n].day)).length!==e.items[n].refs.length&&e.items[n].day!==t){r=e.items[n].day;break}return r}async function h(e,t,r){let n="",s=-1;const a=await c(e,t.day);for(let o=0;o<t.refs.length;o++)if(!a.includes(o)&&o!==r){s=o,n=t.refs[s];break}return[n,s]}function x(){f.set(Date.now()),g("planprogressitems")}const f=p(Date.now());export{b as a,h as b,w as c,R as d,u as g};
